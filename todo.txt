look into letting Float being a valid class in the command search hash

show example using aliases to support commas in numbers
/#{word_break}[,\d]+#{word_break}/ => -> (match) { match.tr(',', '') }
or something. that does not validate commas being every 3. maybe:
/(?<=\d),\d\d\d/

show example of it playing friendly with pagination for mongo/memory.

maybe support a real regex type. using that could mean certain things are not needed.
(one feature that would be possible with this: specify a certain number of matches. like,
this name field must have the string ":)" 3 times.)

it could be nice to be able to have an alias where the proper name is off limits.

support arrays (and maybe other nesting)
support relations

more customizable syntax

chronic thinks that "2000" means 20:20 today, not year 2000.
for colons, though confusing for compares:
it would be nice if "foo:monday" matched any date on a monday, not just like this monday.

q2('-(-1 2 -abc)').should == q2('-(-1) -(2) abc') is currently equivalent logically, but not the same exact query .
multiple NORs under same parent can be merged together.

https://apidock.com/rails/v4.2.7/ActiveRecord/QueryMethods/readonly

Deciding what to do about UTC vs local time handling.
the public search function should maybe take a timezone (or an option for :local or :utc, or such)
https://github.com/mojombo/chronic#time-zones
(looks like user might have to do it since they would need to be using activerecord or such)

Further cleaning up the test suite.

a script to bundle, install DB deps, set up dbs.

test against diff versions of sqlite. (cache gems by sqlite version if need be)

make non-integration tests cover 100% of non backends code.

test against multiple configs and (mysql at least) collations

make a note about using `build` not `search` if you are using multiple databases via activerecord.

work with mariaDB 11

potentially break out each DB into its own job with own matrix
